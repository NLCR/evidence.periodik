plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'cz.incad.nkp.inprove'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(25)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    lombok = '1.18.42'
    openapi = "2.8.13"
    solrj = '9.9.0'
    mapstruct = '1.6.3'
    slf4j = '2.0.17'
    logback = '1.5.18'
    hibernate = '7.1.1.Final'
    redisSession = "3.5.2"
}

repositories {
    mavenCentral()
}

bootJar {
    archiveFileName.set("permonik-api.jar")
    layered {
        enabled = true
    }
    manifest {
        attributes(
                'Implementation-Title': 'Permonik BE',
                'Implementation-Version': archiveVersion
        )
    }
}

jar {
    // disabled generating *-plain.jar version during build
    // https://stackoverflow.com/questions/67663728/spring-boot-2-5-0-generates-plain-jar-file-can-i-remove-it
    enabled = false
}

dependencies {
    // SPRING BOOT
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:4.0.0'

    // HIBERNATE (preCreate, preUpdate, preRemove)
    implementation "org.hibernate.orm:hibernate-envers:${hibernate}"

    // SOLR
    implementation "org.apache.solr:solr-solrj:${solrj}"

    // REDIS
    implementation "org.springframework.session:spring-session-data-redis:${redisSession}"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"

    // JACKSON
    implementation "com.fasterxml.jackson.core:jackson-core:2.20.0"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.20.0"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.20"

    // LOMBOK
    compileOnly "org.projectlombok:lombok:${lombok}"
    annotationProcessor "org.projectlombok:lombok:${lombok}"

    // MAPSTRUCT
    implementation "org.mapstruct:mapstruct:${mapstruct}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct}"

    // SWAGGER / OpenAPI
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openapi}"

    // LOGGING
    implementation "ch.qos.logback:logback-classic:${logback}"
    implementation "org.slf4j:slf4j-api:${slf4j}"

    // DEVELOPMENT
    developmentOnly "org.springframework.boot:spring-boot-devtools"

    // TESTING
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}


tasks.named('test') {
    useJUnitPlatform()
}
